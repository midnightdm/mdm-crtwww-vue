{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/@firebase/app/dist/index.esm2017.js","webpack:///./node_modules/@firebase/auth/dist/esm2017/index.js","webpack:///./node_modules/@firebase/logger/dist/index.esm.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@firebase/component/dist/index.esm.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","PlatformLoggerServiceImpl","container","providers","getProviders","map","provider","isVersionServiceProvider","service","getImmediate","library","version","filter","logString","join","component","getComponent","type","name$o","version$1","logger","name$n","name$m","name$l","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$2","name$1","name","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_apps","Map","_components","_addComponent","app","addComponent","e","debug","_registerComponent","componentName","has","set","values","_getProvider","getProvider","_removeServiceInstance","instanceIdentifier","clearInstance","ERRORS","ERROR_FACTORY","FirebaseAppImpl","options","config","_isDeleted","_options","Object","assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","checkDestroyed","val","isDeleted","create","appName","SDK_VERSION","initializeApp","rawConfig","String","existingApp","get","newApp","getApp","registerVersion","libraryKeyOrName","variant","_a","libraryMismatch","match","versionMismatch","warning","push","warn","registerCoreComponents","__spreadArrays","s","i","il","length","r","Array","k","a","j","jl","LogLevel","instances","levelStringToEnum","DEBUG","VERBOSE","INFO","WARN","ERROR","SILENT","defaultLogLevel","ConsoleMethod","defaultLogHandler","instance","logType","_i","logLevel","now","Date","toISOString","method","Error","console","Logger","_logLevel","_logHandler","_userLogHandler","defineProperty","prototype","TypeError","enumerable","configurable","setLogLevel","log","level","forEach","inst","setUserLogHandler","logCallback","_loop_1","customLogLevel","userLogHandler","message","toString","JSON","stringify","ignored","toLowerCase","instances_1","_classCallCheck","Constructor","Component","instanceFactory","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","callback","Provider","instancesDeferred","instancesOptions","onInitCallbacks","identifier","normalizedIdentifier","normalizeInstanceIdentifier","deferred","isInitialized","shouldAutoInitialize","getOrInitializeService","promise","optional","setComponent","e_1","isComponentEager","_b","entries","_c","next","_d","instanceDeferred","e_1_1","return","call","delete","services","label","from","all","INTERNAL","_delete","sent","isComponentSet","getOptions","initialize","opts","e_2","_e","normalizedDeferredIdentifier","e_2_1","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","e_3","callbacks","callbacks_1","callbacks_1_1","e_3_1","normalizeIdentifierForFactory","ComponentContainer","addOrOverwriteComponent"],"mappings":"sKAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,S,kCC/BZ;;;;;;;;;;;;;;;;;AAqBA,MAAMC,EACF,YAAYC,GACRP,KAAKO,UAAYA,EAIrB,wBACI,MAAMC,EAAYR,KAAKO,UAAUE,eAGjC,OAAOD,EACFE,IAAIC,IACL,GAAIC,EAAyBD,GAAW,CACpC,MAAME,EAAUF,EAASG,eACzB,MAAO,GAAGD,EAAQE,WAAWF,EAAQG,UAGrC,OAAO,OAGVC,OAAOC,GAAaA,GACpBC,KAAK,MAWlB,SAASP,EAAyBD,GAC9B,MAAMS,EAAYT,EAASU,eAC3B,MAAkF,aAA5D,OAAdD,QAAoC,IAAdA,OAAuB,EAASA,EAAUE,MAG5E,MAAMC,EAAS,gBACTC,EAAY,QAkBZC,EAAS,IAAI,OAAO,iBAEpBC,EAAS,uBAETC,EAAS,6BAETC,EAAS,sBAETC,EAAS,6BAETC,EAAS,sBAETC,EAAS,iBAETC,EAAS,wBAETC,EAAS,qBAETC,EAAS,4BAETC,EAAS,sBAETC,EAAS,6BAETC,EAAS,0BAETC,EAAS,iCAETC,EAAS,sBAETC,EAAS,6BAETC,EAAS,wBAETC,EAAS,+BAETC,EAAS,0BAETC,EAAS,iCAETC,EAAS,oBAETC,EAAS,2BAETC,EAAS,sBAETC,EAAS,6BAETC,EAAO,WACPjC,EAAU,QAuBVkC,EAAqB,YACrBC,EAAsB,CACxB,CAAC5B,GAAS,YACV,CAACG,GAAS,mBACV,CAACE,GAAS,iBACV,CAACD,GAAS,wBACV,CAACG,GAAS,iBACV,CAACD,GAAS,wBACV,CAACE,GAAS,YACV,CAACC,GAAS,mBACV,CAACC,GAAS,YACV,CAACC,GAAS,mBACV,CAACC,GAAS,UACV,CAACC,GAAS,iBACV,CAACC,GAAS,WACV,CAACC,GAAS,kBACV,CAACC,GAAS,WACV,CAACC,GAAS,kBACV,CAACC,GAAS,YACV,CAACC,GAAS,mBACV,CAACC,GAAS,UACV,CAACC,GAAS,iBACV,CAACC,GAAS,WACV,CAACC,GAAS,kBACV,CAACC,GAAS,WACV,CAACC,GAAS,kBACV,UAAW,UACX,CAACC,GAAO,eAsBNG,EAAQ,IAAIC,IAOZC,EAAc,IAAID,IAMxB,SAASE,EAAcC,EAAKpC,GACxB,IACIoC,EAAIjD,UAAUkD,aAAarC,GAE/B,MAAOsC,GACHjC,EAAOkC,MAAM,aAAavC,EAAU6B,4CAA4CO,EAAIP,OAAQS,IAiBpG,SAASE,EAAmBxC,GACxB,MAAMyC,EAAgBzC,EAAU6B,KAChC,GAAIK,EAAYQ,IAAID,GAEhB,OADApC,EAAOkC,MAAM,sDAAsDE,OAC5D,EAEXP,EAAYS,IAAIF,EAAezC,GAE/B,IAAK,MAAMoC,KAAOJ,EAAMY,SACpBT,EAAcC,EAAKpC,GAEvB,OAAO,EAWX,SAAS6C,EAAaT,EAAKP,GACvB,OAAOO,EAAIjD,UAAU2D,YAAYjB,GAUrC,SAASkB,EAAuBX,EAAKP,EAAMmB,EAAqBlB,GAC5De,EAAaT,EAAKP,GAAMoB,cAAcD;;;;;;;;;;;;;;;;;AA2B1C,MAAME,EAAS,CACX,CAAC,UAAwB,oFAEzB,CAAC,gBAAoC,gCACrC,CAAC,iBAAsC,kFACvC,CAAC,eAAkC,kDACnC,CAAC,wBAAoD,6EAErD,CAAC,wBAAoD,yDAEnDC,EAAgB,IAAI,OAAa,MAAO,WAAYD;;;;;;;;;;;;;;;;;AAkB1D,MAAME,EACF,YAAYC,EAASC,EAAQnE,GACzBP,KAAK2E,YAAa,EAClB3E,KAAK4E,SAAWC,OAAOC,OAAO,GAAIL,GAClCzE,KAAK+E,QAAUF,OAAOC,OAAO,GAAIJ,GACjC1E,KAAKgF,MAAQN,EAAOzB,KACpBjD,KAAKiF,gCACDP,EAAOQ,+BACXlF,KAAKmF,WAAa5E,EAClBP,KAAKO,UAAUkD,aAAa,IAAI,OAAU,MAAO,IAAMzD,KAAM,WAEjE,qCAEI,OADAA,KAAKoF,iBACEpF,KAAKiF,gCAEhB,mCAAmCI,GAC/BrF,KAAKoF,iBACLpF,KAAKiF,gCAAkCI,EAE3C,WAEI,OADArF,KAAKoF,iBACEpF,KAAKgF,MAEhB,cAEI,OADAhF,KAAKoF,iBACEpF,KAAK4E,SAEhB,aAEI,OADA5E,KAAKoF,iBACEpF,KAAK+E,QAEhB,gBACI,OAAO/E,KAAKmF,WAEhB,gBACI,OAAOnF,KAAK2E,WAEhB,cAAcU,GACVrF,KAAK2E,WAAaU,EAMtB,iBACI,GAAIrF,KAAKsF,UACL,MAAMf,EAAcgB,OAAO,cAAiC,CAAEC,QAASxF,KAAKgF;;;;;;;;;;;;;;;;GA0BxF,MAAMS,EAAczE,EACpB,SAAS0E,EAAcjB,EAASkB,EAAY,IACxC,GAAyB,kBAAdA,EAAwB,CAC/B,MAAM1C,EAAO0C,EACbA,EAAY,CAAE1C,QAElB,MAAMyB,EAASG,OAAOC,OAAO,CAAE7B,KAAMC,EAAoBgC,gCAAgC,GAASS,GAC5F1C,EAAOyB,EAAOzB,KACpB,GAAoB,kBAATA,IAAsBA,EAC7B,MAAMsB,EAAcgB,OAAO,eAAmC,CAC1DC,QAASI,OAAO3C,KAGxB,MAAM4C,EAAczC,EAAM0C,IAAI7C,GAC9B,GAAI4C,EAAa,CAEb,GAAI,eAAUpB,EAASoB,EAAYpB,UAC/B,eAAUC,EAAQmB,EAAYnB,QAC9B,OAAOmB,EAGP,MAAMtB,EAAcgB,OAAO,gBAAqC,CAAEC,QAASvC,IAGnF,MAAM1C,EAAY,IAAI,OAAmB0C,GACzC,IAAK,MAAM7B,KAAakC,EAAYU,SAChCzD,EAAUkD,aAAarC,GAE3B,MAAM2E,EAAS,IAAIvB,EAAgBC,EAASC,EAAQnE,GAEpD,OADA6C,EAAMW,IAAId,EAAM8C,GACTA,EA+BX,SAASC,EAAO/C,EAAOC,GACnB,MAAMM,EAAMJ,EAAM0C,IAAI7C,GACtB,IAAKO,EACD,MAAMe,EAAcgB,OAAO,SAAuB,CAAEC,QAASvC,IAEjE,OAAOO,EA4CX,SAASyC,EAAgBC,EAAkBlF,EAASmF,GAChD,IAAIC,EAGJ,IAAIrF,EAA2D,QAAhDqF,EAAKjD,EAAoB+C,UAAsC,IAAPE,EAAgBA,EAAKF,EACxFC,IACApF,GAAW,IAAIoF,GAEnB,MAAME,EAAkBtF,EAAQuF,MAAM,SAChCC,EAAkBvF,EAAQsF,MAAM,SACtC,GAAID,GAAmBE,EAAiB,CACpC,MAAMC,EAAU,CACZ,+BAA+BzF,oBAA0BC,OAY7D,OAVIqF,GACAG,EAAQC,KAAK,iBAAiB1F,sDAE9BsF,GAAmBE,GACnBC,EAAQC,KAAK,OAEbF,GACAC,EAAQC,KAAK,iBAAiBzF,2DAElCS,EAAOiF,KAAKF,EAAQrF,KAAK,MAG7ByC,EAAmB,IAAI,OAAa7C,EAAH,WAAsB,KAAM,CAAGA,UAASC,YAAY;;;;;;;;;;;;;;;;;AA4CzF,SAAS2F,EAAuBR,GAC5BvC,EAAmB,IAAI,OAAU,kBAAmBrD,GAAa,IAAID,EAA0BC,GAAY,YAE3G0F,EAAgB1E,EAAQC,EAAW2E,GAEnCF,EAAgB,UAAW,IAS/BU,K,oCC5kBA,iX;;;;;;;;;;;;;;;ACeA,SAASC,IACL,IAAK,IAAIC,EAAI,EAAGC,EAAI,EAAGC,EAAK7G,UAAU8G,OAAQF,EAAIC,EAAID,IAAKD,GAAK3G,UAAU4G,GAAGE,OACxE,IAAIC,EAAIC,MAAML,GAAIM,EAAI,EAA3B,IAA8BL,EAAI,EAAGA,EAAIC,EAAID,IACzC,IAAK,IAAIM,EAAIlH,UAAU4G,GAAIO,EAAI,EAAGC,EAAKF,EAAEJ,OAAQK,EAAIC,EAAID,IAAKF,IAC1DF,EAAEE,GAAKC,EAAEC,GACjB,OAAOJ;;;;;;;;;;;;;;;;GAmBX,IAAIb,EAvCJ,wIA2CA,IAYImB,EAZAC,EAAY,IAahB,SAAWD,GACPA,EAASA,EAAS,SAAW,GAAK,QAClCA,EAASA,EAAS,WAAa,GAAK,UACpCA,EAASA,EAAS,QAAU,GAAK,OACjCA,EAASA,EAAS,QAAU,GAAK,OACjCA,EAASA,EAAS,SAAW,GAAK,QAClCA,EAASA,EAAS,UAAY,GAAK,UANvC,CAOGA,IAAaA,EAAW,KAC3B,IAAIE,EAAoB,CACpB,MAASF,EAASG,MAClB,QAAWH,EAASI,QACpB,KAAQJ,EAASK,KACjB,KAAQL,EAASM,KACjB,MAASN,EAASO,MAClB,OAAUP,EAASQ,QAKnBC,EAAkBT,EAASK,KAO3BK,GAAiB7B,EAAK,GACtBA,EAAGmB,EAASG,OAAS,MACrBtB,EAAGmB,EAASI,SAAW,MACvBvB,EAAGmB,EAASK,MAAQ,OACpBxB,EAAGmB,EAASM,MAAQ,OACpBzB,EAAGmB,EAASO,OAAS,QACrB1B,GAMA8B,EAAoB,SAAUC,EAAUC,GAExC,IADA,IAAInI,EAAO,GACFoI,EAAK,EAAGA,EAAKnI,UAAU8G,OAAQqB,IACpCpI,EAAKoI,EAAK,GAAKnI,UAAUmI,GAE7B,KAAID,EAAUD,EAASG,UAAvB,CAGA,IAAIC,GAAM,IAAIC,MAAOC,cACjBC,EAAST,EAAcG,GAC3B,IAAIM,EAIA,MAAM,IAAIC,MAAM,8DAAgEP,EAAU,KAH1FQ,QAAQF,GAAQvI,MAAMyI,QAAShC,EAAe,CAAC,IAAM2B,EAAM,MAAQJ,EAASlF,KAAO,KAAMhD,MAM7F4I,EAAwB,WAOxB,SAASA,EAAO5F,GACZjD,KAAKiD,KAAOA,EAIZjD,KAAK8I,UAAYd,EAKjBhI,KAAK+I,YAAcb,EAInBlI,KAAKgJ,gBAAkB,KAIvBxB,EAAUf,KAAKzG,MAqFnB,OAnFA6E,OAAOoE,eAAeJ,EAAOK,UAAW,WAAY,CAChDpD,IAAK,WACD,OAAO9F,KAAK8I,WAEhB/E,IAAK,SAAUsB,GACX,KAAMA,KAAOkC,GACT,MAAM,IAAI4B,UAAU,kBAAqB9D,EAAM,4BAEnDrF,KAAK8I,UAAYzD,GAErB+D,YAAY,EACZC,cAAc,IAGlBR,EAAOK,UAAUI,YAAc,SAAUjE,GACrCrF,KAAK8I,UAA2B,kBAARzD,EAAmBoC,EAAkBpC,GAAOA,GAExER,OAAOoE,eAAeJ,EAAOK,UAAW,aAAc,CAClDpD,IAAK,WACD,OAAO9F,KAAK+I,aAEhBhF,IAAK,SAAUsB,GACX,GAAmB,oBAARA,EACP,MAAM,IAAI8D,UAAU,qDAExBnJ,KAAK+I,YAAc1D,GAEvB+D,YAAY,EACZC,cAAc,IAElBxE,OAAOoE,eAAeJ,EAAOK,UAAW,iBAAkB,CACtDpD,IAAK,WACD,OAAO9F,KAAKgJ,iBAEhBjF,IAAK,SAAUsB,GACXrF,KAAKgJ,gBAAkB3D,GAE3B+D,YAAY,EACZC,cAAc,IAKlBR,EAAOK,UAAUvF,MAAQ,WAErB,IADA,IAAI1D,EAAO,GACFoI,EAAK,EAAGA,EAAKnI,UAAU8G,OAAQqB,IACpCpI,EAAKoI,GAAMnI,UAAUmI,GAEzBrI,KAAKgJ,iBAAmBhJ,KAAKgJ,gBAAgB7I,MAAMH,KAAM4G,EAAe,CAAC5G,KAAMuH,EAASG,OAAQzH,IAChGD,KAAK+I,YAAY5I,MAAMH,KAAM4G,EAAe,CAAC5G,KAAMuH,EAASG,OAAQzH,KAExE4I,EAAOK,UAAUK,IAAM,WAEnB,IADA,IAAItJ,EAAO,GACFoI,EAAK,EAAGA,EAAKnI,UAAU8G,OAAQqB,IACpCpI,EAAKoI,GAAMnI,UAAUmI,GAEzBrI,KAAKgJ,iBAAmBhJ,KAAKgJ,gBAAgB7I,MAAMH,KAAM4G,EAAe,CAAC5G,KAAMuH,EAASI,SAAU1H,IAClGD,KAAK+I,YAAY5I,MAAMH,KAAM4G,EAAe,CAAC5G,KAAMuH,EAASI,SAAU1H,KAE1E4I,EAAOK,UAAU3J,KAAO,WAEpB,IADA,IAAIU,EAAO,GACFoI,EAAK,EAAGA,EAAKnI,UAAU8G,OAAQqB,IACpCpI,EAAKoI,GAAMnI,UAAUmI,GAEzBrI,KAAKgJ,iBAAmBhJ,KAAKgJ,gBAAgB7I,MAAMH,KAAM4G,EAAe,CAAC5G,KAAMuH,EAASK,MAAO3H,IAC/FD,KAAK+I,YAAY5I,MAAMH,KAAM4G,EAAe,CAAC5G,KAAMuH,EAASK,MAAO3H,KAEvE4I,EAAOK,UAAUxC,KAAO,WAEpB,IADA,IAAIzG,EAAO,GACFoI,EAAK,EAAGA,EAAKnI,UAAU8G,OAAQqB,IACpCpI,EAAKoI,GAAMnI,UAAUmI,GAEzBrI,KAAKgJ,iBAAmBhJ,KAAKgJ,gBAAgB7I,MAAMH,KAAM4G,EAAe,CAAC5G,KAAMuH,EAASM,MAAO5H,IAC/FD,KAAK+I,YAAY5I,MAAMH,KAAM4G,EAAe,CAAC5G,KAAMuH,EAASM,MAAO5H,KAEvE4I,EAAOK,UAAUzJ,MAAQ,WAErB,IADA,IAAIQ,EAAO,GACFoI,EAAK,EAAGA,EAAKnI,UAAU8G,OAAQqB,IACpCpI,EAAKoI,GAAMnI,UAAUmI,GAEzBrI,KAAKgJ,iBAAmBhJ,KAAKgJ,gBAAgB7I,MAAMH,KAAM4G,EAAe,CAAC5G,KAAMuH,EAASO,OAAQ7H,IAChGD,KAAK+I,YAAY5I,MAAMH,KAAM4G,EAAe,CAAC5G,KAAMuH,EAASO,OAAQ7H,KAEjE4I,EA9GgB,GAgH3B,SAASS,EAAYE,GACjBhC,EAAUiC,SAAQ,SAAUC,GACxBA,EAAKJ,YAAYE,MAGzB,SAASG,EAAkBC,EAAanF,GAmDpC,IAlDA,IAAIoF,EAAU,SAAU1B,GACpB,IAAI2B,EAAiB,KACjBrF,GAAWA,EAAQ+E,QACnBM,EAAiBrC,EAAkBhD,EAAQ+E,QAG3CrB,EAAS4B,eADO,OAAhBH,EAC0B,KAGA,SAAUzB,EAAUqB,GAE1C,IADA,IAAIvJ,EAAO,GACFoI,EAAK,EAAGA,EAAKnI,UAAU8G,OAAQqB,IACpCpI,EAAKoI,EAAK,GAAKnI,UAAUmI,GAE7B,IAAI2B,EAAU/J,EACTS,KAAI,SAAUpB,GACf,GAAW,MAAPA,EACA,OAAO,KAEN,GAAmB,kBAARA,EACZ,OAAOA,EAEN,GAAmB,kBAARA,GAAmC,mBAARA,EACvC,OAAOA,EAAI2K,WAEV,GAAI3K,aAAeqJ,MACpB,OAAOrJ,EAAI0K,QAGX,IACI,OAAOE,KAAKC,UAAU7K,GAE1B,MAAO8K,GACH,OAAO,SAIdnJ,QAAO,SAAU3B,GAAO,OAAOA,KAC/B6B,KAAK,KACNqI,IAA6B,OAAnBM,QAA8C,IAAnBA,EAA4BA,EAAiB3B,EAASG,WAC3FsB,EAAY,CACRJ,MAAOjC,EAASiC,GAAOa,cACvBL,QAASA,EACT/J,KAAMA,EACNqB,KAAM6G,EAASlF,SAM1BoF,EAAK,EAAGiC,EAAc9C,EAAWa,EAAKiC,EAAYtD,OAAQqB,IAAM,CACrE,IAAIF,EAAWmC,EAAYjC,GAC3BwB,EAAQ1B,M,kCCzRD,SAASoC,EAAgBpC,EAAUqC,GAChD,KAAMrC,aAAoBqC,GACxB,MAAM,IAAIrB,UAAU,qCAFxB,mC,kCCAA,gGAMIsB,EAA2B,WAO3B,SAASA,EAAUxH,EAAMyH,EAAiBpJ,GACtCtB,KAAKiD,KAAOA,EACZjD,KAAK0K,gBAAkBA,EACvB1K,KAAKsB,KAAOA,EACZtB,KAAK2K,mBAAoB,EAIzB3K,KAAK4K,aAAe,GACpB5K,KAAK6K,kBAAoB,OACzB7K,KAAK8K,kBAAoB,KAkB7B,OAhBAL,EAAUvB,UAAU6B,qBAAuB,SAAUC,GAEjD,OADAhL,KAAK6K,kBAAoBG,EAClBhL,MAEXyK,EAAUvB,UAAU+B,qBAAuB,SAAUN,GAEjD,OADA3K,KAAK2K,kBAAoBA,EAClB3K,MAEXyK,EAAUvB,UAAUgC,gBAAkB,SAAUC,GAE5C,OADAnL,KAAK4K,aAAeO,EACbnL,MAEXyK,EAAUvB,UAAUkC,2BAA6B,SAAUC,GAEvD,OADArL,KAAK8K,kBAAoBO,EAClBrL,MAEJyK,EAnCmB,GAsD1BvH,EAAqB,YAsBrBoI,EAA0B,WAC1B,SAASA,EAASrI,EAAM1C,GACpBP,KAAKiD,KAAOA,EACZjD,KAAKO,UAAYA,EACjBP,KAAKoB,UAAY,KACjBpB,KAAKwH,UAAY,IAAInE,IACrBrD,KAAKuL,kBAAoB,IAAIlI,IAC7BrD,KAAKwL,iBAAmB,IAAInI,IAC5BrD,KAAKyL,gBAAkB,IAAIpI,IAgS/B,OA1RAiI,EAASpC,UAAUpD,IAAM,SAAU4F,GAE/B,IAAIC,EAAuB3L,KAAK4L,4BAA4BF,GAC5D,IAAK1L,KAAKuL,kBAAkBzH,IAAI6H,GAAuB,CACnD,IAAIE,EAAW,IAAI,OAEnB,GADA7L,KAAKuL,kBAAkBxH,IAAI4H,EAAsBE,GAC7C7L,KAAK8L,cAAcH,IACnB3L,KAAK+L,uBAEL,IACI,IAAI5D,EAAWnI,KAAKgM,uBAAuB,CACvC5H,mBAAoBuH,IAEpBxD,GACA0D,EAAS5M,QAAQkJ,GAGzB,MAAOzE,KAMf,OAAO1D,KAAKuL,kBAAkBzF,IAAI6F,GAAsBM,SAE5DX,EAASpC,UAAUpI,aAAe,SAAU2D,GACxC,IAAI2B,EAEAuF,EAAuB3L,KAAK4L,4BAAwC,OAAZnH,QAAgC,IAAZA,OAAqB,EAASA,EAAQiH,YAClHQ,EAAyF,QAA7E9F,EAAiB,OAAZ3B,QAAgC,IAAZA,OAAqB,EAASA,EAAQyH,gBAA6B,IAAP9F,GAAgBA,EACrH,IAAIpG,KAAK8L,cAAcH,KACnB3L,KAAK+L,uBAeJ,CAED,GAAIG,EACA,OAAO,KAGP,MAAMvD,MAAM,WAAa3I,KAAKiD,KAAO,qBApBzC,IACI,OAAOjD,KAAKgM,uBAAuB,CAC/B5H,mBAAoBuH,IAG5B,MAAOjI,GACH,GAAIwI,EACA,OAAO,KAGP,MAAMxI,IActB4H,EAASpC,UAAU7H,aAAe,WAC9B,OAAOrB,KAAKoB,WAEhBkK,EAASpC,UAAUiD,aAAe,SAAU/K,GACxC,IAAIgL,EAAKhG,EACT,GAAIhF,EAAU6B,OAASjD,KAAKiD,KACxB,MAAM0F,MAAM,yBAA2BvH,EAAU6B,KAAO,iBAAmBjD,KAAKiD,KAAO,KAE3F,GAAIjD,KAAKoB,UACL,MAAMuH,MAAM,iBAAmB3I,KAAKiD,KAAO,8BAI/C,GAFAjD,KAAKoB,UAAYA,EAEZpB,KAAK+L,uBAAV,CAIA,GAAIM,EAAiBjL,GACjB,IACIpB,KAAKgM,uBAAuB,CAAE5H,mBAAoBlB,IAEtD,MAAOQ,IAOX,IAII,IAAK,IAAI4I,EAAK,eAAStM,KAAKuL,kBAAkBgB,WAAYC,EAAKF,EAAGG,QAASD,EAAG9M,KAAM8M,EAAKF,EAAGG,OAAQ,CAChG,IAAIC,EAAK,eAAOF,EAAGhN,MAAO,GAAI4E,EAAqBsI,EAAG,GAAIC,EAAmBD,EAAG,GAC5Ef,EAAuB3L,KAAK4L,4BAA4BxH,GAC5D,IAEI,IAAI+D,EAAWnI,KAAKgM,uBAAuB,CACvC5H,mBAAoBuH,IAExBgB,EAAiB1N,QAAQkJ,GAE7B,MAAOzE,MAMf,MAAOkJ,GAASR,EAAM,CAAE3M,MAAOmN,GAC/B,QACI,IACQJ,IAAOA,EAAG9M,OAAS0G,EAAKkG,EAAGO,SAASzG,EAAG0G,KAAKR,GAEpD,QAAU,GAAIF,EAAK,MAAMA,EAAI3M,UAGrC6L,EAASpC,UAAU7E,cAAgB,SAAUqH,QACtB,IAAfA,IAAyBA,EAAaxI,GAC1ClD,KAAKuL,kBAAkBwB,OAAOrB,GAC9B1L,KAAKwL,iBAAiBuB,OAAOrB,GAC7B1L,KAAKwH,UAAUuF,OAAOrB,IAI1BJ,EAASpC,UAAU6D,OAAS,WACxB,OAAO,eAAU/M,UAAM,OAAQ,GAAQ,WACnC,IAAIgN,EACJ,OAAO,eAAYhN,MAAM,SAAUoG,GAC/B,OAAQA,EAAG6G,OACP,KAAK,EAED,OADAD,EAAW9F,MAAMgG,KAAKlN,KAAKwH,UAAUxD,UAC9B,CAAC,EAAarE,QAAQwN,IAAI,eAAc,eAAc,GAAI,eAAOH,EAC/D/L,QAAO,SAAUJ,GAAW,MAAO,aAAcA,KAEjDH,KAAI,SAAUG,GAAW,OAAOA,EAAQuM,SAASL,cAAgB,eAAOC,EACxE/L,QAAO,SAAUJ,GAAW,MAAO,YAAaA,KAEhDH,KAAI,SAAUG,GAAW,OAAOA,EAAQwM,iBACrD,KAAK,EAED,OADAjH,EAAGkH,OACI,CAAC,WAK5BhC,EAASpC,UAAUqE,eAAiB,WAChC,OAAyB,MAAlBvN,KAAKoB,WAEhBkK,EAASpC,UAAU4C,cAAgB,SAAUJ,GAEzC,YADmB,IAAfA,IAAyBA,EAAaxI,GACnClD,KAAKwH,UAAU1D,IAAI4H,IAE9BJ,EAASpC,UAAUsE,WAAa,SAAU9B,GAEtC,YADmB,IAAfA,IAAyBA,EAAaxI,GACnClD,KAAKwL,iBAAiB1F,IAAI4F,IAAe,IAEpDJ,EAASpC,UAAUuE,WAAa,SAAUC,GACtC,IAAIC,EAAKvH,OACI,IAATsH,IAAmBA,EAAO,IAC9B,IAAIpB,EAAKoB,EAAKjJ,QAASA,OAAiB,IAAP6H,EAAgB,GAAKA,EAClDX,EAAuB3L,KAAK4L,4BAA4B8B,EAAKtJ,oBACjE,GAAIpE,KAAK8L,cAAcH,GACnB,MAAMhD,MAAM3I,KAAKiD,KAAO,IAAM0I,EAAuB,kCAEzD,IAAK3L,KAAKuN,iBACN,MAAM5E,MAAM,aAAe3I,KAAKiD,KAAO,gCAE3C,IAAIkF,EAAWnI,KAAKgM,uBAAuB,CACvC5H,mBAAoBuH,EACpBlH,QAASA,IAEb,IAEI,IAAK,IAAI+H,EAAK,eAASxM,KAAKuL,kBAAkBgB,WAAYG,EAAKF,EAAGC,QAASC,EAAGhN,KAAMgN,EAAKF,EAAGC,OAAQ,CAChG,IAAImB,EAAK,eAAOlB,EAAGlN,MAAO,GAAI4E,EAAqBwJ,EAAG,GAAIjB,EAAmBiB,EAAG,GAC5EC,EAA+B7N,KAAK4L,4BAA4BxH,GAChEuH,IAAyBkC,GACzBlB,EAAiB1N,QAAQkJ,IAIrC,MAAO2F,GAASH,EAAM,CAAElO,MAAOqO,GAC/B,QACI,IACQpB,IAAOA,EAAGhN,OAAS0G,EAAKoG,EAAGK,SAASzG,EAAG0G,KAAKN,GAEpD,QAAU,GAAImB,EAAK,MAAMA,EAAIlO,OAEjC,OAAO0I,GAUXmD,EAASpC,UAAU6E,OAAS,SAAU1C,EAAUK,GAC5C,IAAItF,EACAuF,EAAuB3L,KAAK4L,4BAA4BF,GACxDsC,EAA8E,QAAzD5H,EAAKpG,KAAKyL,gBAAgB3F,IAAI6F,UAA0C,IAAPvF,EAAgBA,EAAK,IAAI6H,IACnHD,EAAkBE,IAAI7C,GACtBrL,KAAKyL,gBAAgB1H,IAAI4H,EAAsBqC,GAC/C,IAAIG,EAAmBnO,KAAKwH,UAAU1B,IAAI6F,GAI1C,OAHIwC,GACA9C,EAAS8C,EAAkBxC,GAExB,WACHqC,EAAkBjB,OAAO1B,KAOjCC,EAASpC,UAAUkF,sBAAwB,SAAUjG,EAAUuD,GAC3D,IAAI2C,EAAKjI,EACLkI,EAAYtO,KAAKyL,gBAAgB3F,IAAI4F,GACzC,GAAK4C,EAGL,IACI,IAAK,IAAIC,EAAc,eAASD,GAAYE,EAAgBD,EAAY9B,QAAS+B,EAAc9O,KAAM8O,EAAgBD,EAAY9B,OAAQ,CACrI,IAAIpB,EAAWmD,EAAchP,MAC7B,IACI6L,EAASlD,EAAUuD,GAEvB,MAAOY,MAKf,MAAOmC,GAASJ,EAAM,CAAE5O,MAAOgP,GAC/B,QACI,IACQD,IAAkBA,EAAc9O,OAAS0G,EAAKmI,EAAY1B,SAASzG,EAAG0G,KAAKyB,GAEnF,QAAU,GAAIF,EAAK,MAAMA,EAAI5O,SAGrC6L,EAASpC,UAAU8C,uBAAyB,SAAU5F,GAClD,IAAIhC,EAAqBgC,EAAGhC,mBAAoBkI,EAAKlG,EAAG3B,QAASA,OAAiB,IAAP6H,EAAgB,GAAKA,EAC5FnE,EAAWnI,KAAKwH,UAAU1B,IAAI1B,GAClC,IAAK+D,GAAYnI,KAAKoB,YAClB+G,EAAWnI,KAAKoB,UAAUsJ,gBAAgB1K,KAAKO,UAAW,CACtD6D,mBAAoBsK,EAA8BtK,GAClDK,QAASA,IAEbzE,KAAKwH,UAAUzD,IAAIK,EAAoB+D,GACvCnI,KAAKwL,iBAAiBzH,IAAIK,EAAoBK,GAM9CzE,KAAKoO,sBAAsBjG,EAAU/D,GAMjCpE,KAAKoB,UAAU0J,mBACf,IACI9K,KAAKoB,UAAU0J,kBAAkB9K,KAAKO,UAAW6D,EAAoB+D,GAEzE,MAAOqE,IAKf,OAAOrE,GAAY,MAEvBmD,EAASpC,UAAU0C,4BAA8B,SAAUF,GAEvD,YADmB,IAAfA,IAAyBA,EAAaxI,GACtClD,KAAKoB,UACEpB,KAAKoB,UAAUuJ,kBAAoBe,EAAaxI,EAGhDwI,GAGfJ,EAASpC,UAAU6C,qBAAuB,WACtC,QAAU/L,KAAKoB,WAC0B,aAArCpB,KAAKoB,UAAUyJ,mBAEhBS,EAxSkB,GA2S7B,SAASoD,EAA8BhD,GACnC,OAAOA,IAAexI,OAAqB7C,EAAYqL,EAE3D,SAASW,EAAiBjL,GACtB,MAAuC,UAAhCA,EAAUyJ;;;;;;;;;;;;;;;;GAsBrB,IAAI8D,EAAoC,WACpC,SAASA,EAAmB1L,GACxBjD,KAAKiD,KAAOA,EACZjD,KAAKQ,UAAY,IAAI6C,IA6CzB,OAlCAsL,EAAmBzF,UAAUzF,aAAe,SAAUrC,GAClD,IAAIT,EAAWX,KAAKkE,YAAY9C,EAAU6B,MAC1C,GAAItC,EAAS4M,iBACT,MAAM,IAAI5E,MAAM,aAAevH,EAAU6B,KAAO,qCAAuCjD,KAAKiD,MAEhGtC,EAASwL,aAAa/K,IAE1BuN,EAAmBzF,UAAU0F,wBAA0B,SAAUxN,GAC7D,IAAIT,EAAWX,KAAKkE,YAAY9C,EAAU6B,MACtCtC,EAAS4M,kBAETvN,KAAKQ,UAAUuM,OAAO3L,EAAU6B,MAEpCjD,KAAKyD,aAAarC,IAStBuN,EAAmBzF,UAAUhF,YAAc,SAAUjB,GACjD,GAAIjD,KAAKQ,UAAUsD,IAAIb,GACnB,OAAOjD,KAAKQ,UAAUsF,IAAI7C,GAG9B,IAAItC,EAAW,IAAI2K,EAASrI,EAAMjD,MAElC,OADAA,KAAKQ,UAAUuD,IAAId,EAAMtC,GAClBA,GAEXgO,EAAmBzF,UAAUzI,aAAe,WACxC,OAAOyG,MAAMgG,KAAKlN,KAAKQ,UAAUwD,WAE9B2K,EAhD4B","file":"js/chunk-vendors~0f485567.079c4a3b.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, deepEqual } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* VERSION */;\r\n}\n\nconst name$o = \"@firebase/app\";\nconst version$1 = \"0.7.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$n = \"@firebase/app-compat\";\n\nconst name$m = \"@firebase/analytics-compat\";\n\nconst name$l = \"@firebase/analytics\";\n\nconst name$k = \"@firebase/app-check-compat\";\n\nconst name$j = \"@firebase/app-check\";\n\nconst name$i = \"@firebase/auth\";\n\nconst name$h = \"@firebase/auth-compat\";\n\nconst name$g = \"@firebase/database\";\n\nconst name$f = \"@firebase/database-compat\";\n\nconst name$e = \"@firebase/functions\";\n\nconst name$d = \"@firebase/functions-compat\";\n\nconst name$c = \"@firebase/installations\";\n\nconst name$b = \"@firebase/installations-compat\";\n\nconst name$a = \"@firebase/messaging\";\n\nconst name$9 = \"@firebase/messaging-compat\";\n\nconst name$8 = \"@firebase/performance\";\n\nconst name$7 = \"@firebase/performance-compat\";\n\nconst name$6 = \"@firebase/remote-config\";\n\nconst name$5 = \"@firebase/remote-config-compat\";\n\nconst name$4 = \"@firebase/storage\";\n\nconst name$3 = \"@firebase/storage-compat\";\n\nconst name$2 = \"@firebase/firestore\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"9.0.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$o]: 'fire-core',\r\n    [name$n]: 'fire-core-compat',\r\n    [name$l]: 'fire-analytics',\r\n    [name$m]: 'fire-analytics-compat',\r\n    [name$j]: 'fire-app-check',\r\n    [name$k]: 'fire-app-check-compat',\r\n    [name$i]: 'fire-auth',\r\n    [name$h]: 'fire-auth-compat',\r\n    [name$g]: 'fire-rtdb',\r\n    [name$f]: 'fire-rtdb-compat',\r\n    [name$e]: 'fire-fn',\r\n    [name$d]: 'fire-fn-compat',\r\n    [name$c]: 'fire-iid',\r\n    [name$b]: 'fire-iid-compat',\r\n    [name$a]: 'fire-fcm',\r\n    [name$9]: 'fire-fcm-compat',\r\n    [name$8]: 'fire-perf',\r\n    [name$7]: 'fire-perf-compat',\r\n    [name$6]: 'fire-rc',\r\n    [name$5]: 'fire-rc-compat',\r\n    [name$4]: 'fire-gcs',\r\n    [name$3]: 'fire-gcs-compat',\r\n    [name$2]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"bad-app-name\" /* BAD_APP_NAME */]: \"Illegal App name: '{$appName}\",\r\n    [\"duplicate-app\" /* DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"invalid-app-argument\" /* INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(options, rawConfig = {}) {\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        _apps.delete(name);\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$o, version$1, variant);\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents();\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _registerComponent, _removeServiceInstance, deleteApp, getApp, getApps, initializeApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n","export { A as ActionCodeOperation, ac as ActionCodeURL, G as AuthCredential, C as AuthErrorCodes, H as EmailAuthCredential, L as EmailAuthProvider, M as FacebookAuthProvider, F as FactorId, Q as GithubAuthProvider, N as GoogleAuthProvider, I as OAuthCredential, T as OAuthProvider, O as OperationType, J as PhoneAuthCredential, P as PhoneAuthProvider, m as PhoneMultiFactorGenerator, o as ProviderId, R as RecaptchaVerifier, U as SAMLAuthProvider, S as SignInMethod, V as TwitterAuthProvider, a1 as applyActionCode, b as browserLocalPersistence, k as browserPopupRedirectResolver, a as browserSessionPersistence, a2 as checkActionCode, a0 as confirmPasswordReset, E as connectAuthEmulator, a4 as createUserWithEmailAndPassword, z as debugErrorMap, y as deleteUser, a9 as fetchSignInMethodsForEmail, ak as getAdditionalUserInfo, n as getAuth, ah as getIdToken, ai as getIdTokenResult, am as getMultiFactorResolver, j as getRedirectResult, K as inMemoryPersistence, i as indexedDBLocalPersistence, D as initializeAuth, a7 as isSignInWithEmailLink, Y as linkWithCredential, l as linkWithPhoneNumber, d as linkWithPopup, g as linkWithRedirect, an as multiFactor, t as onAuthStateChanged, q as onIdTokenChanged, ad as parseActionCodeURL, B as prodErrorMap, Z as reauthenticateWithCredential, r as reauthenticateWithPhoneNumber, e as reauthenticateWithPopup, h as reauthenticateWithRedirect, al as reload, aa as sendEmailVerification, $ as sendPasswordResetEmail, a6 as sendSignInLinkToEmail, p as setPersistence, W as signInAnonymously, X as signInWithCredential, _ as signInWithCustomToken, a5 as signInWithEmailAndPassword, a8 as signInWithEmailLink, s as signInWithPhoneNumber, c as signInWithPopup, f as signInWithRedirect, x as signOut, aj as unlink, w as updateCurrentUser, af as updateEmail, ag as updatePassword, u as updatePhoneNumber, ae as updateProfile, v as useDeviceLanguage, ab as verifyBeforeUpdateEmail, a3 as verifyPasswordResetCode } from './index-f263f44f.js';\nimport '@firebase/util';\nimport '@firebase/app';\nimport 'tslib';\nimport '@firebase/logger';\nimport '@firebase/component';\n//# sourceMappingURL=index.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\n/**\r\n * A container for all of the Logger instances\r\n */\r\nvar instances = [];\r\n/**\r\n * The JS SDK supports 5 log levels and also allows a user the ability to\r\n * silence the logs altogether.\r\n *\r\n * The order is a follows:\r\n * DEBUG < VERBOSE < INFO < WARN < ERROR\r\n *\r\n * All of the log types above the current log level will be captured (i.e. if\r\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\r\n * `VERBOSE` logs will not)\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\r\n    LogLevel[LogLevel[\"VERBOSE\"] = 1] = \"VERBOSE\";\r\n    LogLevel[LogLevel[\"INFO\"] = 2] = \"INFO\";\r\n    LogLevel[LogLevel[\"WARN\"] = 3] = \"WARN\";\r\n    LogLevel[LogLevel[\"ERROR\"] = 4] = \"ERROR\";\r\n    LogLevel[LogLevel[\"SILENT\"] = 5] = \"SILENT\";\r\n})(LogLevel || (LogLevel = {}));\r\nvar levelStringToEnum = {\r\n    'debug': LogLevel.DEBUG,\r\n    'verbose': LogLevel.VERBOSE,\r\n    'info': LogLevel.INFO,\r\n    'warn': LogLevel.WARN,\r\n    'error': LogLevel.ERROR,\r\n    'silent': LogLevel.SILENT\r\n};\r\n/**\r\n * The default log level\r\n */\r\nvar defaultLogLevel = LogLevel.INFO;\r\n/**\r\n * By default, `console.debug` is not displayed in the developer console (in\r\n * chrome). To avoid forcing users to have to opt-in to these logs twice\r\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\r\n * logs to the `console.log` function.\r\n */\r\nvar ConsoleMethod = (_a = {},\r\n    _a[LogLevel.DEBUG] = 'log',\r\n    _a[LogLevel.VERBOSE] = 'log',\r\n    _a[LogLevel.INFO] = 'info',\r\n    _a[LogLevel.WARN] = 'warn',\r\n    _a[LogLevel.ERROR] = 'error',\r\n    _a);\r\n/**\r\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\r\n * messages on to their corresponding console counterparts (if the log method\r\n * is supported by the current log level)\r\n */\r\nvar defaultLogHandler = function (instance, logType) {\r\n    var args = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        args[_i - 2] = arguments[_i];\r\n    }\r\n    if (logType < instance.logLevel) {\r\n        return;\r\n    }\r\n    var now = new Date().toISOString();\r\n    var method = ConsoleMethod[logType];\r\n    if (method) {\r\n        console[method].apply(console, __spreadArrays([\"[\" + now + \"]  \" + instance.name + \":\"], args));\r\n    }\r\n    else {\r\n        throw new Error(\"Attempted to log a message with an invalid logType (value: \" + logType + \")\");\r\n    }\r\n};\r\nvar Logger = /** @class */ (function () {\r\n    /**\r\n     * Gives you an instance of a Logger to capture messages according to\r\n     * Firebase's logging scheme.\r\n     *\r\n     * @param name The name that the logs will be associated with\r\n     */\r\n    function Logger(name) {\r\n        this.name = name;\r\n        /**\r\n         * The log level of the given Logger instance.\r\n         */\r\n        this._logLevel = defaultLogLevel;\r\n        /**\r\n         * The main (internal) log handler for the Logger instance.\r\n         * Can be set to a new function in internal package code but not by user.\r\n         */\r\n        this._logHandler = defaultLogHandler;\r\n        /**\r\n         * The optional, additional, user-defined log handler for the Logger instance.\r\n         */\r\n        this._userLogHandler = null;\r\n        /**\r\n         * Capture the current instance for later use\r\n         */\r\n        instances.push(this);\r\n    }\r\n    Object.defineProperty(Logger.prototype, \"logLevel\", {\r\n        get: function () {\r\n            return this._logLevel;\r\n        },\r\n        set: function (val) {\r\n            if (!(val in LogLevel)) {\r\n                throw new TypeError(\"Invalid value \\\"\" + val + \"\\\" assigned to `logLevel`\");\r\n            }\r\n            this._logLevel = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    // Workaround for setter/getter having to be the same type.\r\n    Logger.prototype.setLogLevel = function (val) {\r\n        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\r\n    };\r\n    Object.defineProperty(Logger.prototype, \"logHandler\", {\r\n        get: function () {\r\n            return this._logHandler;\r\n        },\r\n        set: function (val) {\r\n            if (typeof val !== 'function') {\r\n                throw new TypeError('Value assigned to `logHandler` must be a function');\r\n            }\r\n            this._logHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Logger.prototype, \"userLogHandler\", {\r\n        get: function () {\r\n            return this._userLogHandler;\r\n        },\r\n        set: function (val) {\r\n            this._userLogHandler = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * The functions below are all based on the `console` interface\r\n     */\r\n    Logger.prototype.debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));\r\n    };\r\n    Logger.prototype.log = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));\r\n    };\r\n    Logger.prototype.info = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));\r\n    };\r\n    Logger.prototype.warn = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));\r\n    };\r\n    Logger.prototype.error = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n        this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));\r\n    };\r\n    return Logger;\r\n}());\r\nfunction setLogLevel(level) {\r\n    instances.forEach(function (inst) {\r\n        inst.setLogLevel(level);\r\n    });\r\n}\r\nfunction setUserLogHandler(logCallback, options) {\r\n    var _loop_1 = function (instance) {\r\n        var customLogLevel = null;\r\n        if (options && options.level) {\r\n            customLogLevel = levelStringToEnum[options.level];\r\n        }\r\n        if (logCallback === null) {\r\n            instance.userLogHandler = null;\r\n        }\r\n        else {\r\n            instance.userLogHandler = function (instance, level) {\r\n                var args = [];\r\n                for (var _i = 2; _i < arguments.length; _i++) {\r\n                    args[_i - 2] = arguments[_i];\r\n                }\r\n                var message = args\r\n                    .map(function (arg) {\r\n                    if (arg == null) {\r\n                        return null;\r\n                    }\r\n                    else if (typeof arg === 'string') {\r\n                        return arg;\r\n                    }\r\n                    else if (typeof arg === 'number' || typeof arg === 'boolean') {\r\n                        return arg.toString();\r\n                    }\r\n                    else if (arg instanceof Error) {\r\n                        return arg.message;\r\n                    }\r\n                    else {\r\n                        try {\r\n                            return JSON.stringify(arg);\r\n                        }\r\n                        catch (ignored) {\r\n                            return null;\r\n                        }\r\n                    }\r\n                })\r\n                    .filter(function (arg) { return arg; })\r\n                    .join(' ');\r\n                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {\r\n                    logCallback({\r\n                        level: LogLevel[level].toLowerCase(),\r\n                        message: message,\r\n                        args: args,\r\n                        type: instance.name\r\n                    });\r\n                }\r\n            };\r\n        }\r\n    };\r\n    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {\r\n        var instance = instances_1[_i];\r\n        _loop_1(instance);\r\n    }\r\n}\n\nexport { LogLevel, Logger, setLogLevel, setUserLogHandler };\n//# sourceMappingURL=index.esm.js.map\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { __values, __read, __awaiter, __generator, __spreadArray } from 'tslib';\nimport { Deferred } from '@firebase/util';\n\n/**\r\n * Component for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar Component = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param name The public service name, e.g. app, auth, firestore, database\r\n     * @param instanceFactory Service factory responsible for creating the public interface\r\n     * @param type whether the service provided by the component is public or private\r\n     */\r\n    function Component(name, instanceFactory, type) {\r\n        this.name = name;\r\n        this.instanceFactory = instanceFactory;\r\n        this.type = type;\r\n        this.multipleInstances = false;\r\n        /**\r\n         * Properties to be added to the service namespace\r\n         */\r\n        this.serviceProps = {};\r\n        this.instantiationMode = \"LAZY\" /* LAZY */;\r\n        this.onInstanceCreated = null;\r\n    }\r\n    Component.prototype.setInstantiationMode = function (mode) {\r\n        this.instantiationMode = mode;\r\n        return this;\r\n    };\r\n    Component.prototype.setMultipleInstances = function (multipleInstances) {\r\n        this.multipleInstances = multipleInstances;\r\n        return this;\r\n    };\r\n    Component.prototype.setServiceProps = function (props) {\r\n        this.serviceProps = props;\r\n        return this;\r\n    };\r\n    Component.prototype.setInstanceCreatedCallback = function (callback) {\r\n        this.onInstanceCreated = callback;\r\n        return this;\r\n    };\r\n    return Component;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n * NameServiceMapping[T] is an alias for the type of the instance\r\n */\r\nvar Provider = /** @class */ (function () {\r\n    function Provider(name, container) {\r\n        this.name = name;\r\n        this.container = container;\r\n        this.component = null;\r\n        this.instances = new Map();\r\n        this.instancesDeferred = new Map();\r\n        this.instancesOptions = new Map();\r\n        this.onInitCallbacks = new Map();\r\n    }\r\n    /**\r\n     * @param identifier A provider can provide mulitple instances of a service\r\n     * if this.component.multipleInstances is true.\r\n     */\r\n    Provider.prototype.get = function (identifier) {\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n            var deferred = new Deferred();\r\n            this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n            if (this.isInitialized(normalizedIdentifier) ||\r\n                this.shouldAutoInitialize()) {\r\n                // initialize the service if it can be auto-initialized\r\n                try {\r\n                    var instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    if (instance) {\r\n                        deferred.resolve(instance);\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception during get(), it should not cause\r\n                    // a fatal error. We just return the unresolved promise in this case.\r\n                }\r\n            }\r\n        }\r\n        return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n    };\r\n    Provider.prototype.getImmediate = function (options) {\r\n        var _a;\r\n        // if multipleInstances is not supported, use the default name\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n        var optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n        if (this.isInitialized(normalizedIdentifier) ||\r\n            this.shouldAutoInitialize()) {\r\n            try {\r\n                return this.getOrInitializeService({\r\n                    instanceIdentifier: normalizedIdentifier\r\n                });\r\n            }\r\n            catch (e) {\r\n                if (optional) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n            if (optional) {\r\n                return null;\r\n            }\r\n            else {\r\n                throw Error(\"Service \" + this.name + \" is not available\");\r\n            }\r\n        }\r\n    };\r\n    Provider.prototype.getComponent = function () {\r\n        return this.component;\r\n    };\r\n    Provider.prototype.setComponent = function (component) {\r\n        var e_1, _a;\r\n        if (component.name !== this.name) {\r\n            throw Error(\"Mismatching Component \" + component.name + \" for Provider \" + this.name + \".\");\r\n        }\r\n        if (this.component) {\r\n            throw Error(\"Component for \" + this.name + \" has already been provided\");\r\n        }\r\n        this.component = component;\r\n        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n        if (!this.shouldAutoInitialize()) {\r\n            return;\r\n        }\r\n        // if the service is eager, initialize the default instance\r\n        if (isComponentEager(component)) {\r\n            try {\r\n                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n            }\r\n            catch (e) {\r\n                // when the instance factory for an eager Component throws an exception during the eager\r\n                // initialization, it should not cause a fatal error.\r\n                // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                // a fatal error in this case?\r\n            }\r\n        }\r\n        try {\r\n            // Create service instances for the pending promises and resolve them\r\n            // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n            // and all promises with resolve with it regardless of the identifier.\r\n            for (var _b = __values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var _d = __read(_c.value, 2), instanceIdentifier = _d[0], instanceDeferred = _d[1];\r\n                var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n                try {\r\n                    // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                    var instance = this.getOrInitializeService({\r\n                        instanceIdentifier: normalizedIdentifier\r\n                    });\r\n                    instanceDeferred.resolve(instance);\r\n                }\r\n                catch (e) {\r\n                    // when the instance factory throws an exception, it should not cause\r\n                    // a fatal error. We just leave the promise unresolved.\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    Provider.prototype.clearInstance = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        this.instancesDeferred.delete(identifier);\r\n        this.instancesOptions.delete(identifier);\r\n        this.instances.delete(identifier);\r\n    };\r\n    // app.delete() will call this method on every provider to delete the services\r\n    // TODO: should we mark the provider as deleted?\r\n    Provider.prototype.delete = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var services;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        services = Array.from(this.instances.values());\r\n                        return [4 /*yield*/, Promise.all(__spreadArray(__spreadArray([], __read(services\r\n                                .filter(function (service) { return 'INTERNAL' in service; }) // legacy services\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                .map(function (service) { return service.INTERNAL.delete(); }))), __read(services\r\n                                .filter(function (service) { return '_delete' in service; }) // modularized services\r\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                .map(function (service) { return service._delete(); }))))];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Provider.prototype.isComponentSet = function () {\r\n        return this.component != null;\r\n    };\r\n    Provider.prototype.isInitialized = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        return this.instances.has(identifier);\r\n    };\r\n    Provider.prototype.getOptions = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        return this.instancesOptions.get(identifier) || {};\r\n    };\r\n    Provider.prototype.initialize = function (opts) {\r\n        var e_2, _a;\r\n        if (opts === void 0) { opts = {}; }\r\n        var _b = opts.options, options = _b === void 0 ? {} : _b;\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n        if (this.isInitialized(normalizedIdentifier)) {\r\n            throw Error(this.name + \"(\" + normalizedIdentifier + \") has already been initialized\");\r\n        }\r\n        if (!this.isComponentSet()) {\r\n            throw Error(\"Component \" + this.name + \" has not been registered yet\");\r\n        }\r\n        var instance = this.getOrInitializeService({\r\n            instanceIdentifier: normalizedIdentifier,\r\n            options: options\r\n        });\r\n        try {\r\n            // resolve any pending promise waiting for the service instance\r\n            for (var _c = __values(this.instancesDeferred.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var _e = __read(_d.value, 2), instanceIdentifier = _e[0], instanceDeferred = _e[1];\r\n                var normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n                if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                    instanceDeferred.resolve(instance);\r\n                }\r\n            }\r\n        }\r\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_2) throw e_2.error; }\r\n        }\r\n        return instance;\r\n    };\r\n    /**\r\n     *\r\n     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n     *\r\n     * @param identifier An optional instance identifier\r\n     * @returns a function to unregister the callback\r\n     */\r\n    Provider.prototype.onInit = function (callback, identifier) {\r\n        var _a;\r\n        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n        var existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n        existingCallbacks.add(callback);\r\n        this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n        var existingInstance = this.instances.get(normalizedIdentifier);\r\n        if (existingInstance) {\r\n            callback(existingInstance, normalizedIdentifier);\r\n        }\r\n        return function () {\r\n            existingCallbacks.delete(callback);\r\n        };\r\n    };\r\n    /**\r\n     * Invoke onInit callbacks synchronously\r\n     * @param instance the service instance`\r\n     */\r\n    Provider.prototype.invokeOnInitCallbacks = function (instance, identifier) {\r\n        var e_3, _a;\r\n        var callbacks = this.onInitCallbacks.get(identifier);\r\n        if (!callbacks) {\r\n            return;\r\n        }\r\n        try {\r\n            for (var callbacks_1 = __values(callbacks), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {\r\n                var callback = callbacks_1_1.value;\r\n                try {\r\n                    callback(instance, identifier);\r\n                }\r\n                catch (_b) {\r\n                    // ignore errors in the onInit callback\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    Provider.prototype.getOrInitializeService = function (_a) {\r\n        var instanceIdentifier = _a.instanceIdentifier, _b = _a.options, options = _b === void 0 ? {} : _b;\r\n        var instance = this.instances.get(instanceIdentifier);\r\n        if (!instance && this.component) {\r\n            instance = this.component.instanceFactory(this.container, {\r\n                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                options: options\r\n            });\r\n            this.instances.set(instanceIdentifier, instance);\r\n            this.instancesOptions.set(instanceIdentifier, options);\r\n            /**\r\n             * Invoke onInit listeners.\r\n             * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n             * while onInit listeners are registered by consumers of the provider.\r\n             */\r\n            this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n            /**\r\n             * Order is important\r\n             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n             * makes `isInitialized()` return true.\r\n             */\r\n            if (this.component.onInstanceCreated) {\r\n                try {\r\n                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                }\r\n                catch (_c) {\r\n                    // ignore errors in the onInstanceCreatedCallback\r\n                }\r\n            }\r\n        }\r\n        return instance || null;\r\n    };\r\n    Provider.prototype.normalizeInstanceIdentifier = function (identifier) {\r\n        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n        if (this.component) {\r\n            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n        }\r\n        else {\r\n            return identifier; // assume multiple instances are supported before the component is provided.\r\n        }\r\n    };\r\n    Provider.prototype.shouldAutoInitialize = function () {\r\n        return (!!this.component &&\r\n            this.component.instantiationMode !== \"EXPLICIT\" /* EXPLICIT */);\r\n    };\r\n    return Provider;\r\n}());\r\n// undefined should be passed to the service factory for the default instance\r\nfunction normalizeIdentifierForFactory(identifier) {\r\n    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n}\r\nfunction isComponentEager(component) {\r\n    return component.instantiationMode === \"EAGER\" /* EAGER */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n */\r\nvar ComponentContainer = /** @class */ (function () {\r\n    function ComponentContainer(name) {\r\n        this.name = name;\r\n        this.providers = new Map();\r\n    }\r\n    /**\r\n     *\r\n     * @param component Component being added\r\n     * @param overwrite When a component with the same name has already been registered,\r\n     * if overwrite is true: overwrite the existing component with the new component and create a new\r\n     * provider with the new component. It can be useful in tests where you want to use different mocks\r\n     * for different tests.\r\n     * if overwrite is false: throw an exception\r\n     */\r\n    ComponentContainer.prototype.addComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            throw new Error(\"Component \" + component.name + \" has already been registered with \" + this.name);\r\n        }\r\n        provider.setComponent(component);\r\n    };\r\n    ComponentContainer.prototype.addOrOverwriteComponent = function (component) {\r\n        var provider = this.getProvider(component.name);\r\n        if (provider.isComponentSet()) {\r\n            // delete the existing provider from the container, so we can register the new component\r\n            this.providers.delete(component.name);\r\n        }\r\n        this.addComponent(component);\r\n    };\r\n    /**\r\n     * getProvider provides a type safe interface where it can only be called with a field name\r\n     * present in NameServiceMapping interface.\r\n     *\r\n     * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n     * themselves.\r\n     */\r\n    ComponentContainer.prototype.getProvider = function (name) {\r\n        if (this.providers.has(name)) {\r\n            return this.providers.get(name);\r\n        }\r\n        // create a Provider for a service that hasn't registered with Firebase\r\n        var provider = new Provider(name, this);\r\n        this.providers.set(name, provider);\r\n        return provider;\r\n    };\r\n    ComponentContainer.prototype.getProviders = function () {\r\n        return Array.from(this.providers.values());\r\n    };\r\n    return ComponentContainer;\r\n}());\n\nexport { Component, ComponentContainer, Provider };\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":""}